From 09bddcec59911fac1d5bff67e32bd7b48e860e50 Mon Sep 17 00:00:00 2001
From: phunkyfish <phunkyfish@gmail.com>
Date: Wed, 6 Mar 2019 23:28:49 +0000
Subject: [PATCH 1/3] Don't display Activate/Deactivate in timer context menu
 if timer state is PVR_TIMER_STATE_ERROR

---
 xbmc/pvr/PVRContextMenus.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/xbmc/pvr/PVRContextMenus.cpp b/xbmc/pvr/PVRContextMenus.cpp
index efbf89ac2c3d..653b5f3e4981 100644
--- a/xbmc/pvr/PVRContextMenus.cpp
+++ b/xbmc/pvr/PVRContextMenus.cpp
@@ -363,7 +363,7 @@ namespace PVR
     bool ToggleTimerState::IsVisible(const CFileItem &item) const
     {
       const CPVRTimerInfoTagPtr timer(item.GetPVRTimerInfoTag());
-      if (!timer || URIUtils::PathEquals(item.GetPath(), CPVRTimersPath::PATH_ADDTIMER))
+      if (!timer || URIUtils::PathEquals(item.GetPath(), CPVRTimersPath::PATH_ADDTIMER) || timer->IsBroken())
         return false;
 
       const CPVRTimerTypePtr timerType(timer->GetTimerType());

From b0ebcbb3abefde6c5308abd6e50e72c59da16a12 Mon Sep 17 00:00:00 2001
From: phunkyfish <phunkyfish@gmail.com>
Date: Wed, 6 Mar 2019 23:30:09 +0000
Subject: [PATCH 2/3] Don't display enabled toggle in timer settings dialog if
 timer state is PVR_TIMER_STATE_ERROR

---
 xbmc/pvr/dialogs/GUIDialogPVRTimerSettings.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/xbmc/pvr/dialogs/GUIDialogPVRTimerSettings.cpp b/xbmc/pvr/dialogs/GUIDialogPVRTimerSettings.cpp
index 7f7da080c1a6..db2e4a729406 100644
--- a/xbmc/pvr/dialogs/GUIDialogPVRTimerSettings.cpp
+++ b/xbmc/pvr/dialogs/GUIDialogPVRTimerSettings.cpp
@@ -1125,7 +1125,7 @@ bool CGUIDialogPVRTimerSettings::TypeReadOnlyCondition(const std::string &condit
   }
 
   /* Always enable enable/disable, if supported by the timer type. */
-  if (pThis->m_timerType->SupportsEnableDisable())
+  if (pThis->m_timerType->SupportsEnableDisable() && !pThis->m_timerInfoTag->IsBroken())
   {
     if (cond == SETTING_TMR_ACTIVE)
       return true;

From 32087f1c06e7403595e749409310e3a007aeb89c Mon Sep 17 00:00:00 2001
From: phunkyfish <phunkyfish@gmail.com>
Date: Wed, 6 Mar 2019 23:31:03 +0000
Subject: [PATCH 3/3] Don't include timer in active or recording lists if timer
 state is PVR_TIMER_STATE_ERROR

---
 xbmc/pvr/timers/PVRTimers.cpp | 14 +++++++++-----
 1 file changed, 9 insertions(+), 5 deletions(-)

diff --git a/xbmc/pvr/timers/PVRTimers.cpp b/xbmc/pvr/timers/PVRTimers.cpp
index ddc6267decdd..1fcda74243b4 100644
--- a/xbmc/pvr/timers/PVRTimers.cpp
+++ b/xbmc/pvr/timers/PVRTimers.cpp
@@ -412,7 +412,7 @@ std::vector<CFileItemPtr> CPVRTimers::GetActiveTimers(void) const
     for (VecTimerInfoTag::const_iterator timerIt = it->second.begin(); timerIt != it->second.end(); ++timerIt)
     {
       CPVRTimerInfoTagPtr current = *timerIt;
-      if (current->IsActive() && !current->IsTimerRule())
+      if (current->IsActive() && !current->IsTimerRule() && !current->IsBroken())
       {
         CFileItemPtr fileItem(new CFileItem(current));
         tags.push_back(fileItem);
@@ -434,7 +434,8 @@ int CPVRTimers::AmountActiveTimers(const TimerKind &eKind) const
     {
       if (KindMatchesTag(eKind, timersEntry) &&
           timersEntry->IsActive() &&
-          !timersEntry->IsTimerRule())
+          !timersEntry->IsTimerRule() &&
+          !timersEntry->IsBroken())
         ++iReturn;
     }
   }
@@ -468,7 +469,8 @@ std::vector<CFileItemPtr> CPVRTimers::GetActiveRecordings(const TimerKind &eKind
     {
       if (KindMatchesTag(eKind, timersEntry) &&
           timersEntry->IsRecording() &&
-          !timersEntry->IsTimerRule())
+          !timersEntry->IsTimerRule() &&
+          !timersEntry->IsBroken())
       {
         CFileItemPtr fileItem(new CFileItem(timersEntry));
         tags.push_back(fileItem);
@@ -505,7 +507,8 @@ int CPVRTimers::AmountActiveRecordings(const TimerKind &eKind) const
     {
       if (KindMatchesTag(eKind, timersEntry) &&
           timersEntry->IsRecording() &&
-          !timersEntry->IsTimerRule())
+          !timersEntry->IsTimerRule() &&
+          !timersEntry->IsBroken())
         ++iReturn;
     }
   }
@@ -533,7 +536,7 @@ bool CPVRTimers::HasActiveTimers(void) const
   CSingleLock lock(m_critSection);
   for (MapTags::const_iterator it = m_tags.begin(); it != m_tags.end(); ++it)
     for (VecTimerInfoTag::const_iterator timerIt = it->second.begin(); timerIt != it->second.end(); ++timerIt)
-      if ((*timerIt)->IsActive() && !(*timerIt)->IsTimerRule())
+      if ((*timerIt)->IsActive() && !(*timerIt)->IsTimerRule() && !(*timerIt)->IsBroken())
         return true;
 
   return false;
@@ -795,6 +798,7 @@ CPVRTimerInfoTagPtr CPVRTimers::GetRecordingTimerForRecording(const CPVRRecordin
     {
       if (timersEntry->IsRecording() &&
           !timersEntry->IsTimerRule() &&
+          !timersEntry->IsBroken() &&
           timersEntry->m_iClientId == recording.ClientID() &&
           timersEntry->m_iClientChannelUid == recording.ChannelUid())
       {
