From d54af0a09c3a017101d5bc2322ff3cc1265865f8 Mon Sep 17 00:00:00 2001
From: Michael Brehm <djp952@gmail.com>
Date: Sat, 23 Feb 2019 14:51:18 -0500
Subject: [PATCH] Use audio stream to determine start time of MPEG-TS programs
 with no video streams

---
 .../DVDDemuxers/DVDDemuxFFmpeg.cpp            | 29 +++++++++++++++++++
 1 file changed, 29 insertions(+)

diff --git a/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp b/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
index dec7d0456767..11af64a251b7 100644
--- a/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
+++ b/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
@@ -2078,6 +2078,21 @@ bool CDVDDemuxFFmpeg::IsVideoReady()
         hasVideo = true;
       }
     }
+    // Workaround for live audio-only MPEG-TS streams: If there are no elementary video streams
+    // present attempt to set the start time from the first available elementary audio stream instead
+    if (!hasVideo && !m_startTime)
+    {
+      for (unsigned int i = 0; i < m_pFormatContext->programs[m_program]->nb_stream_indexes; i++)
+      {
+        int idx = m_pFormatContext->programs[m_program]->stream_index[i];
+        st = m_pFormatContext->streams[idx];
+        if (st->codecpar->codec_type == AVMEDIA_TYPE_AUDIO)
+        {
+          m_startTime = static_cast<double>(av_rescale(st->cur_dts, st->time_base.num, st->time_base.den));
+          break;
+        }
+      }
+    }
   }
   else
   {
@@ -2095,6 +2110,20 @@ bool CDVDDemuxFFmpeg::IsVideoReady()
         hasVideo = true;
       }
     }
+    // Workaround for live audio-only MPEG-TS streams: If there are no elementary video streams
+    // present attempt to set the start time from the first available elementary audio stream instead
+    if (!hasVideo && !m_startTime)
+    {
+      for (unsigned int i = 0; i < m_pFormatContext->nb_streams; i++)
+      {
+        st = m_pFormatContext->streams[i];
+        if (st->codecpar->codec_type == AVMEDIA_TYPE_AUDIO)
+        {
+          m_startTime = static_cast<double>(av_rescale(st->cur_dts, st->time_base.num, st->time_base.den));
+          break;
+        }
+      }
+    }
   }
   return !hasVideo;
 }
